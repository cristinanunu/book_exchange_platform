// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using bookExchange.Api.Data;

#nullable disable

namespace bookExchange.Api.Migrations
{
    [DbContext(typeof(BooksContext))]
    [Migration("20230315095733_ModifyDate")]
    partial class ModifyDate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("bookExchange.Api.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AddedAt")
                        .HasColumnType("date");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Book");
                });

            modelBuilder.Entity("bookExchange.Api.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "KiarraCormier_Rippin25@hotmail.com",
                            Name = "Kiarra Cormier"
                        },
                        new
                        {
                            Id = 2,
                            Email = "MikeKoss35@gmail.com",
                            Name = "Mike Koss"
                        },
                        new
                        {
                            Id = 3,
                            Email = "JulioLegros19@gmail.com",
                            Name = "Julio Legros"
                        },
                        new
                        {
                            Id = 4,
                            Email = "ElyssaRomaguera86@gmail.com",
                            Name = "Elyssa Romaguera"
                        },
                        new
                        {
                            Id = 5,
                            Email = "AdolphusGreenholt_Hoppe11@hotmail.com",
                            Name = "Adolphus Greenholt"
                        },
                        new
                        {
                            Id = 6,
                            Email = "AndyPredovic55@hotmail.com",
                            Name = "Andy Predovic"
                        },
                        new
                        {
                            Id = 7,
                            Email = "MathewRoberts.Watsica94@hotmail.com",
                            Name = "Mathew Roberts"
                        },
                        new
                        {
                            Id = 8,
                            Email = "MargarettLangworth.Haag@hotmail.com",
                            Name = "Margarett Langworth"
                        },
                        new
                        {
                            Id = 9,
                            Email = "EldoraBailey.Konopelski23@yahoo.com",
                            Name = "Eldora Bailey"
                        },
                        new
                        {
                            Id = 10,
                            Email = "AhmadHartmann71@yahoo.com",
                            Name = "Ahmad Hartmann"
                        });
                });

            modelBuilder.Entity("bookExchange.Api.Models.Book", b =>
                {
                    b.HasOne("bookExchange.Api.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
